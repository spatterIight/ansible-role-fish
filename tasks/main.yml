---
- name: Install fish packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop: "{{ fish_packages }}"
  tags: ansible-role-fish

- name: Create /etc/skel fish configuration directory
  ansible.builtin.file:
    path: "/etc/skel/{{ fish_configuration_directory }}"
    state: directory
    owner: root
    group: root
    mode: "0750"
  tags: ansible-role-fish

- name: Write config.fish to /etc/skel
  ansible.builtin.copy:
    src: config.fish
    dest: "/etc/skel/{{ fish_configuration_directory }}/config.fish"
    owner: root
    group: root
    mode: "0644"
  tags: ansible-role-fish

- name: Write done.fish to /etc/skel
  ansible.builtin.copy:
    src: done.fish
    dest: "/etc/skel/{{ fish_configuration_directory }}/done.fish"
    owner: root
    group: root
    mode: "0644"
  tags: ansible-role-fish

- name: Create users fish configuration directory
  ansible.builtin.file:
    path: "{{ path }}/.config/fish/{{ fish_configuration_directory }}"
    state: directory
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: "0750"
  vars:
    path: "{{ '/root' if item == 'root' else '/home/' + item }}"
  when: fish_configure_users | length > 0
  loop: "{{ fish_configure_users }}"
  tags: ansible-role-fish

- name: Write config.fish to users directory
  ansible.builtin.copy:
    src: config.fish
    dest: "{{ dest_path }}/{{ fish_configuration_directory }}/config.fish"
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: "0644"
  vars:
    dest_path: "{{ '/root' if item == 'root' else '/home/' + item }}"
  when: fish_configure_users | length > 0
  loop: "{{ fish_configure_users }}"
  tags: ansible-role-fish

- name: Write done.fish to users directory
  ansible.builtin.copy:
    src: done.fish
    dest: "{{ dest_path }}/{{ fish_configuration_directory }}/done.fish"
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: "0644"
  vars:
    dest_path: "{{ '/root' if item == 'root' else '/home/' + item }}"
  when: fish_configure_users | length > 0
  loop: "{{ fish_configure_users }}"
  tags: ansible-role-fish

- name: Create /etc/skel McFly directory
  ansible.builtin.file:
    path: "/etc/skel/{{ fish_mcfly_directory }}"
    state: directory
    owner: root
    group: root
    mode: "0750"
  tags: ansible-role-fish

- name: Touch the /etc/skel McFly fish_history file
  ansible.builtin.file:
    path: "/etc/skel/{{ fish_mcfly_directory }}/fish_history"
    state: touch
    owner: root
    group: root
    mode: "0644"
    modification_time: preserve
    access_time: preserve
  tags: ansible-role-fish

- name: Create users McFly directory
  ansible.builtin.file:
    path: "{{ path }}/{{ fish_mcfly_directory }}"
    state: directory
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: "0750"
  vars:
    path: "{{ '/root' if item == 'root' else '/home/' + item }}"
  when: fish_configure_users | length > 0
  loop: "{{ fish_configure_users }}"
  tags: ansible-role-fish

- name: Touch the users McFly fish_history file
  ansible.builtin.file:
    path: "{{ path }}/{{ fish_mcfly_directory }}/fish_history"
    state: touch
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: "0644"
    modification_time: preserve
    access_time: preserve
  vars:
    path: "{{ '/root' if item == 'root' else '/home/' + item }}"
  when: fish_configure_users | length > 0
  loop: "{{ fish_configure_users }}"
  tags: ansible-role-fish

- name: Write starship.toml to /etc/skel
  ansible.builtin.copy:
    src: starship.toml
    dest: "/etc/skel/.config/starship.toml"
    owner: root
    group: root
    mode: "0644"
  tags: ansible-role-fish

- name: Write starship.toml to users directory
  ansible.builtin.copy:
    src: starship.toml
    dest: "{{ dest_path }}/.config/starship.toml"
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: "0644"
  vars:
    dest_path: "{{ '/root' if item == 'root' else '/home/' + item }}"
  when: fish_configure_users | length > 0
  loop: "{{ fish_configure_users }}"
  tags: ansible-role-fish

- name: Write garuda-fish-completions-update.service to /usr/lib/systemd/user
  ansible.builtin.copy:
    src: garuda-fish-completions-update.service
    dest: "/usr/lib/systemd/user/garuda-fish-completions-update.service"
    owner: root
    group: root
    mode: "0644"
  tags: ansible-role-fish

- name: Write autopair.fish to /usr/share/fish
  ansible.builtin.copy:
    src: autopair.fish
    dest: "/usr/share/fish/vendor_conf.d/done.fish"
    owner: root
    group: root
    mode: "0644"
  tags: ansible-role-fish

- name: Write autopair functions to /usr/share/fish
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/usr/share/fish/vendor_functions.d"
    owner: root
    group: root
    mode: "0644"
  loop:
    - _autopair_backspace.fish
    - _autopair_insert_left.fish
    - _autopair_insert_right.fish
    - _autopair_insert_same.fish
    - _autopair_tab.fish
  tags: ansible-role-fish

- name: Check if Starship is already installed
  ansible.builtin.stat:
    path: /usr/local/bin/starship
  register: starship_stat
  tags: ansible-role-fish

- name: Install Starship.rs if not already installed
  block:
    - name: Download Starship.rs install script
      ansible.builtin.get_url:
        url: https://starship.rs/install.sh
        dest: /tmp/starship-install.sh
        mode: '0755'

    - name: Execute Starship.rs install script
      ansible.builtin.command: /tmp/starship-install.sh --yes

    - name: Clean up install script
      ansible.builtin.file:
        path: /tmp/starship-install.sh
        state: absent
  when: not starship_stat.stat.exists
  tags: ansible-role-fish

- name: Set users default shell to fish
  ansible.builtin.user:
    name: "{{ item }}"
    shell: /bin/fish
  when: fish_configure_users | length > 0
  loop: "{{ fish_configure_users }}"
  tags: ansible-role-fish
